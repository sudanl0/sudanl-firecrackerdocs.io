(function() {var type_impls = {
"vmm":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-GuestMemoryMmap%3CB%3E\" class=\"impl\"><a href=\"#impl-GuestMemoryMmap%3CB%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;B&gt; GuestMemoryMmap&lt;B&gt;<div class=\"where\">where\n    B: NewBitmap,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">new</a>() -&gt; GuestMemoryMmap&lt;B&gt;</h4></section></summary><div class=\"docblock\"><p>Creates an empty <code>GuestMemoryMmap</code> instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_ranges\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_ranges</a>(\n    ranges: &amp;[(<a class=\"struct\" href=\"vmm/vstate/memory/struct.GuestAddress.html\" title=\"struct vmm::vstate::memory::GuestAddress\">GuestAddress</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>)]\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;GuestMemoryMmap&lt;B&gt;, Error&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a container and allocates anonymous memory for guest memory regions.</p>\n<p>Valid memory regions are specified as a slice of (Address, Size) tuples sorted by Address.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_ranges_with_files\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_ranges_with_files</a>&lt;A, T&gt;(\n    ranges: T\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;GuestMemoryMmap&lt;B&gt;, Error&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/borrow/trait.Borrow.html\" title=\"trait core::borrow::Borrow\">Borrow</a>&lt;(<a class=\"struct\" href=\"vmm/vstate/memory/struct.GuestAddress.html\" title=\"struct vmm::vstate::memory::GuestAddress\">GuestAddress</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"vmm/vstate/memory/struct.FileOffset.html\" title=\"struct vmm::vstate::memory::FileOffset\">FileOffset</a>&gt;)&gt;,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = A&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Creates a container and allocates anonymous memory for guest memory regions.</p>\n<p>Valid memory regions are specified as a sequence of (Address, Size, Option<FileOffset>)\ntuples sorted by Address.</p>\n</div></details></div></details>",0,"vmm::vstate::memory::GuestMemoryMmap"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-GuestMemoryMmap%3CB%3E\" class=\"impl\"><a href=\"#impl-GuestMemoryMmap%3CB%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;B&gt; GuestMemoryMmap&lt;B&gt;<div class=\"where\">where\n    B: <a class=\"trait\" href=\"vmm/vstate/memory/trait.Bitmap.html\" title=\"trait vmm::vstate::memory::Bitmap\">Bitmap</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_regions\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_regions</a>(\n    regions: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;GuestRegionMmap&lt;B&gt;&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;GuestMemoryMmap&lt;B&gt;, Error&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a new <code>GuestMemoryMmap</code> from a vector of regions.</p>\n<h5 id=\"arguments\"><a href=\"#arguments\">Arguments</a></h5>\n<ul>\n<li><code>regions</code> - The vector of regions.\nThe regions shouldn’t overlap and they should be sorted\nby the starting address.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_arc_regions\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_arc_regions</a>(\n    regions: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;GuestRegionMmap&lt;B&gt;&gt;&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;GuestMemoryMmap&lt;B&gt;, Error&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a new <code>GuestMemoryMmap</code> from a vector of Arc regions.</p>\n<p>Similar to the constructor <code>from_regions()</code> as it returns a\n<code>GuestMemoryMmap</code>. The need for this constructor is to provide a way for\nconsumer of this API to create a new <code>GuestMemoryMmap</code> based on existing\nregions coming from an existing <code>GuestMemoryMmap</code> instance.</p>\n<h5 id=\"arguments-1\"><a href=\"#arguments-1\">Arguments</a></h5>\n<ul>\n<li><code>regions</code> - The vector of <code>Arc</code> regions.\nThe regions shouldn’t overlap and they should be sorted\nby the starting address.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert_region\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">insert_region</a>(\n    &amp;self,\n    region: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;GuestRegionMmap&lt;B&gt;&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;GuestMemoryMmap&lt;B&gt;, Error&gt;</h4></section></summary><div class=\"docblock\"><p>Insert a region into the <code>GuestMemoryMmap</code> object and return a new <code>GuestMemoryMmap</code>.</p>\n<h5 id=\"arguments-2\"><a href=\"#arguments-2\">Arguments</a></h5>\n<ul>\n<li><code>region</code>: the memory region to insert into the guest memory object.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_region\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove_region</a>(\n    &amp;self,\n    base: <a class=\"struct\" href=\"vmm/vstate/memory/struct.GuestAddress.html\" title=\"struct vmm::vstate::memory::GuestAddress\">GuestAddress</a>,\n    size: &lt;<a class=\"struct\" href=\"vmm/vstate/memory/struct.GuestAddress.html\" title=\"struct vmm::vstate::memory::GuestAddress\">GuestAddress</a> as <a class=\"trait\" href=\"vmm/vstate/memory/address/trait.AddressValue.html\" title=\"trait vmm::vstate::memory::address::AddressValue\">AddressValue</a>&gt;::<a class=\"associatedtype\" href=\"vmm/vstate/memory/address/trait.AddressValue.html#associatedtype.V\" title=\"type vmm::vstate::memory::address::AddressValue::V\">V</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(GuestMemoryMmap&lt;B&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;GuestRegionMmap&lt;B&gt;&gt;), Error&gt;</h4></section></summary><div class=\"docblock\"><p>Remove a region into the <code>GuestMemoryMmap</code> object and return a new <code>GuestMemoryMmap</code>\non success, together with the removed region.</p>\n<h5 id=\"arguments-3\"><a href=\"#arguments-3\">Arguments</a></h5>\n<ul>\n<li><code>base</code>: base address of the region to be removed</li>\n<li><code>size</code>: size of the region to be removed</li>\n</ul>\n</div></details></div></details>",0,"vmm::vstate::memory::GuestMemoryMmap"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-GuestMemoryMmap%3CB%3E\" class=\"impl\"><a href=\"#impl-Clone-for-GuestMemoryMmap%3CB%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;B&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for GuestMemoryMmap&lt;B&gt;<div class=\"where\">where\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; GuestMemoryMmap&lt;B&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","vmm::vstate::memory::GuestMemoryMmap"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-GuestMemoryIterator%3C'a,+GuestRegionMmap%3CB%3E%3E-for-GuestMemoryMmap%3CB%3E\" class=\"impl\"><a href=\"#impl-GuestMemoryIterator%3C'a,+GuestRegionMmap%3CB%3E%3E-for-GuestMemoryMmap%3CB%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, B&gt; GuestMemoryIterator&lt;'a, GuestRegionMmap&lt;B&gt;&gt; for GuestMemoryMmap&lt;B&gt;<div class=\"where\">where\n    B: 'a,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Iter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Iter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Iter</a> = Iter&lt;'a, B&gt;</h4></section></summary><div class='docblock'>Type of the <code>iter</code> method’s return value.</div></details></div></details>","GuestMemoryIterator<'a, GuestRegionMmap<B>>","vmm::vstate::memory::GuestMemoryMmap"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-GuestMemoryMmap%3CB%3E\" class=\"impl\"><a href=\"#impl-Debug-for-GuestMemoryMmap%3CB%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;B&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for GuestMemoryMmap&lt;B&gt;<div class=\"where\">where\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","vmm::vstate::memory::GuestMemoryMmap"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-GuestMemory-for-GuestMemoryMmap%3CB%3E\" class=\"impl\"><a href=\"#impl-GuestMemory-for-GuestMemoryMmap%3CB%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;B&gt; <a class=\"trait\" href=\"vmm/vstate/memory/trait.GuestMemory.html\" title=\"trait vmm::vstate::memory::GuestMemory\">GuestMemory</a> for GuestMemoryMmap&lt;B&gt;<div class=\"where\">where\n    B: <a class=\"trait\" href=\"vmm/vstate/memory/trait.Bitmap.html\" title=\"trait vmm::vstate::memory::Bitmap\">Bitmap</a> + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.R\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.R\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"vmm/vstate/memory/trait.GuestMemory.html#associatedtype.R\" class=\"associatedtype\">R</a> = GuestRegionMmap&lt;B&gt;</h4></section></summary><div class='docblock'>Type of objects hosted by the address space.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.I\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.I\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"vmm/vstate/memory/trait.GuestMemory.html#associatedtype.I\" class=\"associatedtype\">I</a> = GuestMemoryMmap&lt;B&gt;</h4></section></summary><div class='docblock'>Lifetime generic associated iterators. Usually this is just <code>Self</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_regions\" class=\"method trait-impl\"><a href=\"#method.num_regions\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"vmm/vstate/memory/trait.GuestMemory.html#tymethod.num_regions\" class=\"fn\">num_regions</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Returns the number of regions in the collection.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.find_region\" class=\"method trait-impl\"><a href=\"#method.find_region\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"vmm/vstate/memory/trait.GuestMemory.html#tymethod.find_region\" class=\"fn\">find_region</a>(&amp;self, addr: <a class=\"struct\" href=\"vmm/vstate/memory/struct.GuestAddress.html\" title=\"struct vmm::vstate::memory::GuestAddress\">GuestAddress</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;GuestRegionMmap&lt;B&gt;&gt;</h4></section></summary><div class='docblock'>Returns the region containing the specified address or <code>None</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method trait-impl\"><a href=\"#method.iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"vmm/vstate/memory/trait.GuestMemory.html#tymethod.iter\" class=\"fn\">iter</a>(&amp;self) -&gt; Iter&lt;'_, B&gt;</h4></section></summary><div class='docblock'>Gets an iterator over the entries in the collection. <a href=\"vmm/vstate/memory/trait.GuestMemory.html#tymethod.iter\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_regions\" class=\"method trait-impl\"><a href=\"#method.with_regions\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"vmm/vstate/memory/trait.GuestMemory.html#method.with_regions\" class=\"fn\">with_regions</a>&lt;F, E&gt;(&amp;self, cb: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, &amp;Self::<a class=\"associatedtype\" href=\"vmm/vstate/memory/trait.GuestMemory.html#associatedtype.R\" title=\"type vmm::vstate::memory::GuestMemory::R\">R</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, E&gt;,</div></h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated since 0.6.0: Use <code>.iter()</code> instead</span></div></span><div class='docblock'>Perform the specified action on each region. <a href=\"vmm/vstate/memory/trait.GuestMemory.html#method.with_regions\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_regions_mut\" class=\"method trait-impl\"><a href=\"#method.with_regions_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"vmm/vstate/memory/trait.GuestMemory.html#method.with_regions_mut\" class=\"fn\">with_regions_mut</a>&lt;F, E&gt;(&amp;self, cb: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, &amp;Self::<a class=\"associatedtype\" href=\"vmm/vstate/memory/trait.GuestMemory.html#associatedtype.R\" title=\"type vmm::vstate::memory::GuestMemory::R\">R</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, E&gt;,</div></h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated since 0.6.0: Use <code>.iter()</code> instead</span></div></span><div class='docblock'>Perform the specified action on each region mutably. <a href=\"vmm/vstate/memory/trait.GuestMemory.html#method.with_regions_mut\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map_and_fold\" class=\"method trait-impl\"><a href=\"#method.map_and_fold\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"vmm/vstate/memory/trait.GuestMemory.html#method.map_and_fold\" class=\"fn\">map_and_fold</a>&lt;F, G, T&gt;(&amp;self, init: T, mapf: F, foldf: G) -&gt; T<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>((<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, &amp;Self::<a class=\"associatedtype\" href=\"vmm/vstate/memory/trait.GuestMemory.html#associatedtype.R\" title=\"type vmm::vstate::memory::GuestMemory::R\">R</a>)) -&gt; T,\n    G: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(T, T) -&gt; T,</div></h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated since 0.6.0: Use <code>.iter()</code> instead</span></div></span><div class='docblock'>Applies two functions, specified as callbacks, on the inner memory regions. <a href=\"vmm/vstate/memory/trait.GuestMemory.html#method.map_and_fold\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.last_addr\" class=\"method trait-impl\"><a href=\"#method.last_addr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"vmm/vstate/memory/trait.GuestMemory.html#method.last_addr\" class=\"fn\">last_addr</a>(&amp;self) -&gt; <a class=\"struct\" href=\"vmm/vstate/memory/struct.GuestAddress.html\" title=\"struct vmm::vstate::memory::GuestAddress\">GuestAddress</a></h4></section></summary><div class='docblock'>Returns the maximum (inclusive) address managed by the\n<a href=\"trait.GuestMemory.html\"><code>GuestMemory</code></a>. <a href=\"vmm/vstate/memory/trait.GuestMemory.html#method.last_addr\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_region_addr\" class=\"method trait-impl\"><a href=\"#method.to_region_addr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"vmm/vstate/memory/trait.GuestMemory.html#method.to_region_addr\" class=\"fn\">to_region_addr</a>(\n    &amp;self,\n    addr: <a class=\"struct\" href=\"vmm/vstate/memory/struct.GuestAddress.html\" title=\"struct vmm::vstate::memory::GuestAddress\">GuestAddress</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(&amp;Self::<a class=\"associatedtype\" href=\"vmm/vstate/memory/trait.GuestMemory.html#associatedtype.R\" title=\"type vmm::vstate::memory::GuestMemory::R\">R</a>, <a class=\"struct\" href=\"vmm/vstate/memory/struct.MemoryRegionAddress.html\" title=\"struct vmm::vstate::memory::MemoryRegionAddress\">MemoryRegionAddress</a>)&gt;</h4></section></summary><div class='docblock'>Tries to convert an absolute address to a relative address within the corresponding region. <a href=\"vmm/vstate/memory/trait.GuestMemory.html#method.to_region_addr\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.address_in_range\" class=\"method trait-impl\"><a href=\"#method.address_in_range\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"vmm/vstate/memory/trait.GuestMemory.html#method.address_in_range\" class=\"fn\">address_in_range</a>(&amp;self, addr: <a class=\"struct\" href=\"vmm/vstate/memory/struct.GuestAddress.html\" title=\"struct vmm::vstate::memory::GuestAddress\">GuestAddress</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> if the given address is present within the memory of the guest.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.check_address\" class=\"method trait-impl\"><a href=\"#method.check_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"vmm/vstate/memory/trait.GuestMemory.html#method.check_address\" class=\"fn\">check_address</a>(&amp;self, addr: <a class=\"struct\" href=\"vmm/vstate/memory/struct.GuestAddress.html\" title=\"struct vmm::vstate::memory::GuestAddress\">GuestAddress</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"vmm/vstate/memory/struct.GuestAddress.html\" title=\"struct vmm::vstate::memory::GuestAddress\">GuestAddress</a>&gt;</h4></section></summary><div class='docblock'>Returns the given address if it is present within the memory of the guest.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.check_range\" class=\"method trait-impl\"><a href=\"#method.check_range\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"vmm/vstate/memory/trait.GuestMemory.html#method.check_range\" class=\"fn\">check_range</a>(&amp;self, base: <a class=\"struct\" href=\"vmm/vstate/memory/struct.GuestAddress.html\" title=\"struct vmm::vstate::memory::GuestAddress\">GuestAddress</a>, len: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Check whether the range [base, base + len) is valid.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_offset\" class=\"method trait-impl\"><a href=\"#method.checked_offset\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"vmm/vstate/memory/trait.GuestMemory.html#method.checked_offset\" class=\"fn\">checked_offset</a>(\n    &amp;self,\n    base: <a class=\"struct\" href=\"vmm/vstate/memory/struct.GuestAddress.html\" title=\"struct vmm::vstate::memory::GuestAddress\">GuestAddress</a>,\n    offset: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"vmm/vstate/memory/struct.GuestAddress.html\" title=\"struct vmm::vstate::memory::GuestAddress\">GuestAddress</a>&gt;</h4></section></summary><div class='docblock'>Returns the address plus the offset if it is present within the memory of the guest.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_access\" class=\"method trait-impl\"><a href=\"#method.try_access\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"vmm/vstate/memory/trait.GuestMemory.html#method.try_access\" class=\"fn\">try_access</a>&lt;F&gt;(\n    &amp;self,\n    count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>,\n    addr: <a class=\"struct\" href=\"vmm/vstate/memory/struct.GuestAddress.html\" title=\"struct vmm::vstate::memory::GuestAddress\">GuestAddress</a>,\n    f: F\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, Error&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"vmm/vstate/memory/struct.MemoryRegionAddress.html\" title=\"struct vmm::vstate::memory::MemoryRegionAddress\">MemoryRegionAddress</a>, &amp;Self::<a class=\"associatedtype\" href=\"vmm/vstate/memory/trait.GuestMemory.html#associatedtype.R\" title=\"type vmm::vstate::memory::GuestMemory::R\">R</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, Error&gt;,</div></h4></section></summary><div class='docblock'>Invokes callback <code>f</code> to handle data in the address range <code>[addr, addr + count)</code>. <a href=\"vmm/vstate/memory/trait.GuestMemory.html#method.try_access\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_volatile_from\" class=\"method trait-impl\"><a href=\"#method.read_volatile_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"vmm/vstate/memory/trait.GuestMemory.html#method.read_volatile_from\" class=\"fn\">read_volatile_from</a>&lt;F&gt;(\n    &amp;self,\n    addr: <a class=\"struct\" href=\"vmm/vstate/memory/struct.GuestAddress.html\" title=\"struct vmm::vstate::memory::GuestAddress\">GuestAddress</a>,\n    src: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut F</a>,\n    count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, Error&gt;<div class=\"where\">where\n    F: ReadVolatile,</div></h4></section></summary><div class='docblock'>Reads up to <code>count</code> bytes from an object and writes them into guest memory at <code>addr</code>. <a href=\"vmm/vstate/memory/trait.GuestMemory.html#method.read_volatile_from\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_volatile_to\" class=\"method trait-impl\"><a href=\"#method.write_volatile_to\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"vmm/vstate/memory/trait.GuestMemory.html#method.write_volatile_to\" class=\"fn\">write_volatile_to</a>&lt;F&gt;(\n    &amp;self,\n    addr: <a class=\"struct\" href=\"vmm/vstate/memory/struct.GuestAddress.html\" title=\"struct vmm::vstate::memory::GuestAddress\">GuestAddress</a>,\n    dst: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut F</a>,\n    count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, Error&gt;<div class=\"where\">where\n    F: WriteVolatile,</div></h4></section></summary><div class='docblock'>Reads up to <code>count</code> bytes from the container at <code>addr</code> and writes them it into guest memory. <a href=\"vmm/vstate/memory/trait.GuestMemory.html#method.write_volatile_to\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_exact_volatile_from\" class=\"method trait-impl\"><a href=\"#method.read_exact_volatile_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"vmm/vstate/memory/trait.GuestMemory.html#method.read_exact_volatile_from\" class=\"fn\">read_exact_volatile_from</a>&lt;F&gt;(\n    &amp;self,\n    addr: <a class=\"struct\" href=\"vmm/vstate/memory/struct.GuestAddress.html\" title=\"struct vmm::vstate::memory::GuestAddress\">GuestAddress</a>,\n    src: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut F</a>,\n    count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, Error&gt;<div class=\"where\">where\n    F: ReadVolatile,</div></h4></section></summary><div class='docblock'>Reads exactly <code>count</code> bytes from an object and writes them into guest memory at <code>addr</code>. <a href=\"vmm/vstate/memory/trait.GuestMemory.html#method.read_exact_volatile_from\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_all_volatile_to\" class=\"method trait-impl\"><a href=\"#method.write_all_volatile_to\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"vmm/vstate/memory/trait.GuestMemory.html#method.write_all_volatile_to\" class=\"fn\">write_all_volatile_to</a>&lt;F&gt;(\n    &amp;self,\n    addr: <a class=\"struct\" href=\"vmm/vstate/memory/struct.GuestAddress.html\" title=\"struct vmm::vstate::memory::GuestAddress\">GuestAddress</a>,\n    dst: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut F</a>,\n    count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, Error&gt;<div class=\"where\">where\n    F: WriteVolatile,</div></h4></section></summary><div class='docblock'>Reads exactly <code>count</code> bytes from the container at <code>addr</code> and writes them into guest memory. <a href=\"vmm/vstate/memory/trait.GuestMemory.html#method.write_all_volatile_to\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_host_address\" class=\"method trait-impl\"><a href=\"#method.get_host_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"vmm/vstate/memory/trait.GuestMemory.html#method.get_host_address\" class=\"fn\">get_host_address</a>(&amp;self, addr: <a class=\"struct\" href=\"vmm/vstate/memory/struct.GuestAddress.html\" title=\"struct vmm::vstate::memory::GuestAddress\">GuestAddress</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, Error&gt;</h4></section></summary><div class='docblock'>Get the host virtual address corresponding to the guest address. <a href=\"vmm/vstate/memory/trait.GuestMemory.html#method.get_host_address\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_slice\" class=\"method trait-impl\"><a href=\"#method.get_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"vmm/vstate/memory/trait.GuestMemory.html#method.get_slice\" class=\"fn\">get_slice</a>(\n    &amp;self,\n    addr: <a class=\"struct\" href=\"vmm/vstate/memory/struct.GuestAddress.html\" title=\"struct vmm::vstate::memory::GuestAddress\">GuestAddress</a>,\n    count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;VolatileSlice&lt;'_, &lt;&lt;Self::<a class=\"associatedtype\" href=\"vmm/vstate/memory/trait.GuestMemory.html#associatedtype.R\" title=\"type vmm::vstate::memory::GuestMemory::R\">R</a> as <a class=\"trait\" href=\"vmm/vstate/memory/trait.GuestMemoryRegion.html\" title=\"trait vmm::vstate::memory::GuestMemoryRegion\">GuestMemoryRegion</a>&gt;::<a class=\"associatedtype\" href=\"vmm/vstate/memory/trait.GuestMemoryRegion.html#associatedtype.B\" title=\"type vmm::vstate::memory::GuestMemoryRegion::B\">B</a> as WithBitmapSlice&lt;'_&gt;&gt;::S&gt;, Error&gt;</h4></section></summary><div class='docblock'>Returns a <a href=\"struct.VolatileSlice.html\"><code>VolatileSlice</code></a> of <code>count</code> bytes starting at\n<code>addr</code>.</div></details></div></details>","GuestMemory","vmm::vstate::memory::GuestMemoryMmap"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-GuestMemoryMmap%3CB%3E\" class=\"impl\"><a href=\"#impl-Default-for-GuestMemoryMmap%3CB%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;B&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for GuestMemoryMmap&lt;B&gt;<div class=\"where\">where\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; GuestMemoryMmap&lt;B&gt;</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","vmm::vstate::memory::GuestMemoryMmap"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()