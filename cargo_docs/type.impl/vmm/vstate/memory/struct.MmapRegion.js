(function() {var type_impls = {
"vmm":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MmapRegion%3CB%3E\" class=\"impl\"><a href=\"#impl-MmapRegion%3CB%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;B&gt; <a class=\"struct\" href=\"vmm/vstate/memory/struct.MmapRegion.html\" title=\"struct vmm::vstate::memory::MmapRegion\">MmapRegion</a>&lt;B&gt;<div class=\"where\">where\n    B: NewBitmap,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"vmm/vstate/memory/struct.MmapRegion.html#tymethod.new\" class=\"fn\">new</a>(size: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"vmm/vstate/memory/struct.MmapRegion.html\" title=\"struct vmm::vstate::memory::MmapRegion\">MmapRegion</a>&lt;B&gt;, Error&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a shared anonymous mapping of <code>size</code> bytes.</p>\n<h5 id=\"arguments\"><a href=\"#arguments\">Arguments</a></h5>\n<ul>\n<li><code>size</code> - The size of the memory region in bytes.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_file\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"vmm/vstate/memory/struct.MmapRegion.html#tymethod.from_file\" class=\"fn\">from_file</a>(\n    file_offset: <a class=\"struct\" href=\"vmm/vstate/memory/struct.FileOffset.html\" title=\"struct vmm::vstate::memory::FileOffset\">FileOffset</a>,\n    size: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"vmm/vstate/memory/struct.MmapRegion.html\" title=\"struct vmm::vstate::memory::MmapRegion\">MmapRegion</a>&lt;B&gt;, Error&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a shared file mapping of <code>size</code> bytes.</p>\n<h5 id=\"arguments-1\"><a href=\"#arguments-1\">Arguments</a></h5>\n<ul>\n<li><code>file_offset</code> - The mapping will be created at offset <code>file_offset.start</code> in the file\nreferred to by <code>file_offset.file</code>.</li>\n<li><code>size</code> - The size of the memory region in bytes.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.build\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"vmm/vstate/memory/struct.MmapRegion.html#tymethod.build\" class=\"fn\">build</a>(\n    file_offset: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"vmm/vstate/memory/struct.FileOffset.html\" title=\"struct vmm::vstate::memory::FileOffset\">FileOffset</a>&gt;,\n    size: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>,\n    prot: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>,\n    flags: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"vmm/vstate/memory/struct.MmapRegion.html\" title=\"struct vmm::vstate::memory::MmapRegion\">MmapRegion</a>&lt;B&gt;, Error&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a mapping based on the provided arguments.</p>\n<h5 id=\"arguments-2\"><a href=\"#arguments-2\">Arguments</a></h5>\n<ul>\n<li><code>file_offset</code> - if provided, the method will create a file mapping at offset\n<code>file_offset.start</code> in the file referred to by <code>file_offset.file</code>.</li>\n<li><code>size</code> - The size of the memory region in bytes.</li>\n<li><code>prot</code> - The desired memory protection of the mapping.</li>\n<li><code>flags</code> - This argument determines whether updates to the mapping are visible to other\nprocesses mapping the same region, and whether updates are carried through to\nthe underlying file.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_raw\" class=\"method\"><h4 class=\"code-header\">pub unsafe fn <a href=\"vmm/vstate/memory/struct.MmapRegion.html#tymethod.build_raw\" class=\"fn\">build_raw</a>(\n    addr: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>,\n    size: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>,\n    prot: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>,\n    flags: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"vmm/vstate/memory/struct.MmapRegion.html\" title=\"struct vmm::vstate::memory::MmapRegion\">MmapRegion</a>&lt;B&gt;, Error&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a <code>MmapRegion</code> instance for an externally managed mapping.</p>\n<p>This method is intended to be used exclusively in situations in which the mapping backing\nthe region is provided by an entity outside the control of the caller (e.g. the dynamic\nlinker).</p>\n<h5 id=\"arguments-3\"><a href=\"#arguments-3\">Arguments</a></h5>\n<ul>\n<li><code>addr</code> - Pointer to the start of the mapping. Must be page-aligned.</li>\n<li><code>size</code> - The size of the memory region in bytes.</li>\n<li><code>prot</code> - Must correspond to the memory protection attributes of the existing mapping.</li>\n<li><code>flags</code> - Must correspond to the flags that were passed to <code>mmap</code> for the creation of\nthe existing mapping.</li>\n</ul>\n<h5 id=\"safety\"><a href=\"#safety\">Safety</a></h5>\n<p>To use this safely, the caller must guarantee that <code>addr</code> and <code>size</code> define a region within\na valid mapping that is already present in the process.</p>\n</div></details></div></details>",0,"vmm::vstate::memory::GuestMmapRegion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MmapRegion%3CB%3E\" class=\"impl\"><a href=\"#impl-MmapRegion%3CB%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;B&gt; <a class=\"struct\" href=\"vmm/vstate/memory/struct.MmapRegion.html\" title=\"struct vmm::vstate::memory::MmapRegion\">MmapRegion</a>&lt;B&gt;<div class=\"where\">where\n    B: <a class=\"trait\" href=\"vmm/vstate/memory/trait.Bitmap.html\" title=\"trait vmm::vstate::memory::Bitmap\">Bitmap</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ptr\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"vmm/vstate/memory/struct.MmapRegion.html#tymethod.as_ptr\" class=\"fn\">as_ptr</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class=\"docblock\"><p>Returns a pointer to the beginning of the memory region. Mutable accesses performed\nusing the resulting pointer are not automatically accounted for by the dirty bitmap\ntracking functionality.</p>\n<p>Should only be used for passing this region to ioctls for setting guest memory.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.size\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"vmm/vstate/memory/struct.MmapRegion.html#tymethod.size\" class=\"fn\">size</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Returns the size of this region.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.file_offset\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"vmm/vstate/memory/struct.MmapRegion.html#tymethod.file_offset\" class=\"fn\">file_offset</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;<a class=\"struct\" href=\"vmm/vstate/memory/struct.FileOffset.html\" title=\"struct vmm::vstate::memory::FileOffset\">FileOffset</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns information regarding the offset into the file backing this region (if any).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.prot\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"vmm/vstate/memory/struct.MmapRegion.html#tymethod.prot\" class=\"fn\">prot</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a></h4></section></summary><div class=\"docblock\"><p>Returns the value of the <code>prot</code> parameter passed to <code>mmap</code> when mapping this region.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.flags\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"vmm/vstate/memory/struct.MmapRegion.html#tymethod.flags\" class=\"fn\">flags</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a></h4></section></summary><div class=\"docblock\"><p>Returns the value of the <code>flags</code> parameter passed to <code>mmap</code> when mapping this region.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.owned\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"vmm/vstate/memory/struct.MmapRegion.html#tymethod.owned\" class=\"fn\">owned</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if the mapping is owned by this <code>MmapRegion</code> instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.fds_overlap\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"vmm/vstate/memory/struct.MmapRegion.html#tymethod.fds_overlap\" class=\"fn\">fds_overlap</a>&lt;T&gt;(&amp;self, other: &amp;<a class=\"struct\" href=\"vmm/vstate/memory/struct.MmapRegion.html\" title=\"struct vmm::vstate::memory::MmapRegion\">MmapRegion</a>&lt;T&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"vmm/vstate/memory/trait.Bitmap.html\" title=\"trait vmm::vstate::memory::Bitmap\">Bitmap</a>,</div></h4></section></summary><div class=\"docblock\"><p>Checks whether this region and <code>other</code> are backed by overlapping\n<a href=\"struct.FileOffset.html\"><code>FileOffset</code></a> objects.</p>\n<p>This is mostly a sanity check available for convenience, as different file descriptors\ncan alias the same file.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_hugetlbfs\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"vmm/vstate/memory/struct.MmapRegion.html#tymethod.set_hugetlbfs\" class=\"fn\">set_hugetlbfs</a>(&amp;mut self, hugetlbfs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Set the hugetlbfs of the region</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_hugetlbfs\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"vmm/vstate/memory/struct.MmapRegion.html#tymethod.is_hugetlbfs\" class=\"fn\">is_hugetlbfs</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if the region is hugetlbfs</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitmap\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"vmm/vstate/memory/struct.MmapRegion.html#tymethod.bitmap\" class=\"fn\">bitmap</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;B</a></h4></section></summary><div class=\"docblock\"><p>Returns a reference to the inner bitmap object.</p>\n</div></details></div></details>",0,"vmm::vstate::memory::GuestMmapRegion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-MmapRegion%3CB%3E\" class=\"impl\"><a href=\"#impl-Debug-for-MmapRegion%3CB%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;B&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"vmm/vstate/memory/struct.MmapRegion.html\" title=\"struct vmm::vstate::memory::MmapRegion\">MmapRegion</a>&lt;B&gt;<div class=\"where\">where\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","vmm::vstate::memory::GuestMmapRegion"],["<section id=\"impl-Send-for-MmapRegion%3CB%3E\" class=\"impl\"><a href=\"#impl-Send-for-MmapRegion%3CB%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;B&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> for <a class=\"struct\" href=\"vmm/vstate/memory/struct.MmapRegion.html\" title=\"struct vmm::vstate::memory::MmapRegion\">MmapRegion</a>&lt;B&gt;<div class=\"where\">where\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section>","Send","vmm::vstate::memory::GuestMmapRegion"],["<section id=\"impl-Sync-for-MmapRegion%3CB%3E\" class=\"impl\"><a href=\"#impl-Sync-for-MmapRegion%3CB%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;B&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> for <a class=\"struct\" href=\"vmm/vstate/memory/struct.MmapRegion.html\" title=\"struct vmm::vstate::memory::MmapRegion\">MmapRegion</a>&lt;B&gt;<div class=\"where\">where\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,</div></h3></section>","Sync","vmm::vstate::memory::GuestMmapRegion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-VolatileMemory-for-MmapRegion%3CB%3E\" class=\"impl\"><a href=\"#impl-VolatileMemory-for-MmapRegion%3CB%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;B&gt; VolatileMemory for <a class=\"struct\" href=\"vmm/vstate/memory/struct.MmapRegion.html\" title=\"struct vmm::vstate::memory::MmapRegion\">MmapRegion</a>&lt;B&gt;<div class=\"where\">where\n    B: <a class=\"trait\" href=\"vmm/vstate/memory/trait.Bitmap.html\" title=\"trait vmm::vstate::memory::Bitmap\">Bitmap</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.B\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.B\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a class=\"associatedtype\">B</a> = B</h4></section></summary><div class='docblock'>Type used for dirty memory tracking.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.len\" class=\"method trait-impl\"><a href=\"#method.len\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">len</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Gets the size of this slice.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_slice\" class=\"method trait-impl\"><a href=\"#method.get_slice\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">get_slice</a>(\n    &amp;self,\n    offset: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>,\n    count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;VolatileSlice&lt;'_, &lt;B as WithBitmapSlice&lt;'_&gt;&gt;::S&gt;, Error&gt;</h4></section></summary><div class='docblock'>Returns a <a href=\"struct.VolatileSlice.html\"><code>VolatileSlice</code></a> of <code>count</code> bytes starting at\n<code>offset</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_empty\" class=\"method trait-impl\"><a href=\"#method.is_empty\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">is_empty</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Check whether the region is empty.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_volatile_slice\" class=\"method trait-impl\"><a href=\"#method.as_volatile_slice\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">as_volatile_slice</a>(\n    &amp;self\n) -&gt; VolatileSlice&lt;'_, &lt;Self::B as WithBitmapSlice&lt;'_&gt;&gt;::S&gt;</h4></section></summary><div class='docblock'>Gets a slice of memory for the entire region that supports volatile access.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_ref\" class=\"method trait-impl\"><a href=\"#method.get_ref\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">get_ref</a>&lt;T&gt;(\n    &amp;self,\n    offset: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;VolatileRef&lt;'_, T, &lt;Self::B as WithBitmapSlice&lt;'_&gt;&gt;::S&gt;, Error&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"vmm/vstate/memory/trait.ByteValued.html\" title=\"trait vmm::vstate::memory::ByteValued\">ByteValued</a>,</div></h4></section></summary><div class='docblock'>Gets a <code>VolatileRef</code> at <code>offset</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_array_ref\" class=\"method trait-impl\"><a href=\"#method.get_array_ref\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">get_array_ref</a>&lt;T&gt;(\n    &amp;self,\n    offset: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>,\n    n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;VolatileArrayRef&lt;'_, T, &lt;Self::B as WithBitmapSlice&lt;'_&gt;&gt;::S&gt;, Error&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"vmm/vstate/memory/trait.ByteValued.html\" title=\"trait vmm::vstate::memory::ByteValued\">ByteValued</a>,</div></h4></section></summary><div class='docblock'>Returns a <a href=\"struct.VolatileArrayRef.html\"><code>VolatileArrayRef</code></a> of <code>n</code> elements starting at\n<code>offset</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.aligned_as_ref\" class=\"method trait-impl\"><a href=\"#method.aligned_as_ref\" class=\"anchor\">ยง</a><h4 class=\"code-header\">unsafe fn <a class=\"fn\">aligned_as_ref</a>&lt;T&gt;(&amp;self, offset: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>, Error&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"vmm/vstate/memory/trait.ByteValued.html\" title=\"trait vmm::vstate::memory::ByteValued\">ByteValued</a>,</div></h4></section></summary><div class='docblock'>Returns a reference to an instance of <code>T</code> at <code>offset</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.aligned_as_mut\" class=\"method trait-impl\"><a href=\"#method.aligned_as_mut\" class=\"anchor\">ยง</a><h4 class=\"code-header\">unsafe fn <a class=\"fn\">aligned_as_mut</a>&lt;T&gt;(&amp;self, offset: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut T</a>, Error&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"vmm/vstate/memory/trait.ByteValued.html\" title=\"trait vmm::vstate::memory::ByteValued\">ByteValued</a>,</div></h4></section></summary><div class='docblock'>Returns a mutable reference to an instance of <code>T</code> at <code>offset</code>. Mutable accesses performed\nusing the resulting reference are not automatically accounted for by the dirty bitmap\ntracking functionality. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_atomic_ref\" class=\"method trait-impl\"><a href=\"#method.get_atomic_ref\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">get_atomic_ref</a>&lt;T&gt;(&amp;self, offset: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>, Error&gt;<div class=\"where\">where\n    T: AtomicInteger,</div></h4></section></summary><div class='docblock'>Returns a reference to an instance of <code>T</code> at <code>offset</code>. Mutable accesses performed\nusing the resulting reference are not automatically accounted for by the dirty bitmap\ntracking functionality. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.compute_end_offset\" class=\"method trait-impl\"><a href=\"#method.compute_end_offset\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">compute_end_offset</a>(&amp;self, base: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, offset: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, Error&gt;</h4></section></summary><div class='docblock'>Returns the sum of <code>base</code> and <code>offset</code> if the resulting address is valid.</div></details></div></details>","VolatileMemory","vmm::vstate::memory::GuestMmapRegion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Drop-for-MmapRegion%3CB%3E\" class=\"impl\"><a href=\"#impl-Drop-for-MmapRegion%3CB%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;B&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/drop/trait.Drop.html\" title=\"trait core::ops::drop::Drop\">Drop</a> for <a class=\"struct\" href=\"vmm/vstate/memory/struct.MmapRegion.html\" title=\"struct vmm::vstate::memory::MmapRegion\">MmapRegion</a>&lt;B&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.drop\" class=\"method trait-impl\"><a href=\"#method.drop\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/drop/trait.Drop.html#tymethod.drop\" class=\"fn\">drop</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Executes the destructor for this type. <a href=\"https://doc.rust-lang.org/nightly/core/ops/drop/trait.Drop.html#tymethod.drop\">Read more</a></div></details></div></details>","Drop","vmm::vstate::memory::GuestMmapRegion"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()